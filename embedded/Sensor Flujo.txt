import RPi.GPIO as GPIO
import sqlite3
import time
import requests

SENSOR_PIN = 36
GPIO.setmode(GPIO.BCM)

conn = sqlite3.connect('mediciones.db')
c = conn.cursor()

c.execute('''CREATE TABLE IF NOT EXISTS mediciones
             (id INTEGER PRIMARY KEY, volumen REAL, tiempo TEXT)''')

FACTOR_CONVERSION = 0.00225
VOLUMEN_DESEADO = 0.4

# Configuración de ThingSpeak
thingspeak_api_key = 'V1B3YHGBS4AFSUHY'
thingspeak_url = f'https://api.thingspeak.com/update?api_key={thingspeak_api_key}'

def medir_volumen(pin, volumen_deseado):
    contador = 0
    volumen_acumulado = 0
    volumen_alcanzado = False

    def contar_pulsos(pin):
        nonlocal contador
        contador += 1

    try:
        GPIO.setup(pin, GPIO.IN)  # Configurar el pin como entrada
        GPIO.add_event_detect(pin, GPIO.FALLING, callback=contar_pulsos)

        while not volumen_alcanzado:
            volumen_acumulado = contador * FACTOR_CONVERSION 
            tiempo_actual = time.strftime('%Y-%m-%d %H:%M:%S')
            c.execute("INSERT INTO mediciones (volumen, tiempo) VALUES (?, ?)", (volumen_acumulado, tiempo_actual))
            conn.commit()
            print("Volumen acumulado:", volumen_acumulado, "litros")

            # Enviar datos a ThingSpeak
            payload = {'field1': volumen_acumulado}
            response = requests.post(thingspeak_url, params=payload)
            if response.status_code == 200:
                print("Datos enviados a ThingSpeak.")

            if volumen_acumulado >= volumen_deseado:
                volumen_alcanzado = True  # Marcar que se alcanzó el volumen deseado

            time.sleep(0.1)  # Pausa de 0.1 segundos entre cada medición

    except KeyboardInterrupt:
        pass
    finally:
        GPIO.remove_event_detect(pin)
        GPIO.cleanup()

    return volumen_acumulado

if __name__ == "__main__":
    resultado = medir_volumen(SENSOR_PIN, VOLUMEN_DESEADO)
    print("Volumen deseado alcanzado. Resultado:", resultado)

    # Imprimir el mensaje cada 5 segundos después de alcanzar el volumen deseado
    while True:
        print("¡Volumen deseado alcanzado!")
        time.sleep(5)  # Esperar 5 segundos antes de volver a imprimir el mensaje
